version: 2

jobs:
  build:
    docker:
      - image: circleci/python:2.7.13
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: testuser
          POSTGRES_DB: ics
    working_directory: '~/wafflecone'
    steps:
      - checkout
      - restore_cache:
          key: deps6-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            sudo pip install --force-reinstall pip==9.0.1    
            sudo pip install virtualenv --upgrade
            python -m virtualenv venv
            source venv/bin/activate
            pip install -r requirements.txt
            sudo pip install boto3
      - save_cache:
          key: deps6-{{ checksum "requirements.txt" }}
          paths:
            - ./venv
      - run:
          name: Run Tests
          command: |
            source venv/bin/activate
            ./manage.py test
      - run:
          name: Package and Deploy Django app using Zappa
          command: |
            sudo pip install --force-reinstall pip==9.0.1 
            source venv/bin/activate
            pip install --force-reinstall pip==9.0.1
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              zappa update staging
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              zappa update production
            fi
      - run:
          name: Upload Environment Variables to AWS Lambda function
          command: |
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              python ./transformEnvs.py staging
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              python ./transformEnvs.py production
            fi
      - run:
          name: Run database migration
          command: |
            source venv/bin/activate
            if [ "${CIRCLE_BRANCH}" == "staging" ]; then
              zappa manage staging migrate
            elif [ "${CIRCLE_BRANCH}" == "master" ]; then
              zappa manage production migrate
            fi
